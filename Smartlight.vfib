{"name":"Smartlight","type":"virtual_device","properties":{"deviceIcon":0,"currentIcon":"0","log":"","logTemp":"","mainLoop":"local secs_per_iteration = 3;\nlocal lightIds = { 28, 32, 44 };\n\n\nlocal thisId = fibaro:getSelfId();\nlocal timeTimeout = 60*tonumber(fibaro:getValue(thisId, \"ui.sldTimeTimeout.value\"));\nlocal timeOverride = 60*tonumber(fibaro:getValue(thisId, \"ui.sldTimeOverride.value\"));\nlocal timeWarning = tonumber(fibaro:getValue(thisId, \"ui.sldTimeWarning.value\"));\nlocal levelStarting = tonumber(fibaro:getValue(thisId, \"ui.sldLevelStart.value\"));\nlocal levelWarning = tonumber(fibaro:getValue(thisId, \"ui.sldLevelWarning.value\"));\nlocal levelTimeout = tonumber(fibaro:getValue(thisId, \"ui.sldLevelTimeout.value\"));\nlocal counter = tonumber(fibaro:getValue(thisId, \"ui.lblTimeLeft.value\"));\nlocal state = fibaro:getValue(thisId, \"ui.lblState.value\");\nlocal valueSet = tonumber(fibaro:getValue(thisId, \"ui.lblValueSet.value\"));\nlocal command = fibaro:getValue(thisId, \"ui.lblCommand.value\");\n\nlocal next_state = \"\";\n\n-- Check if light has been manually changed outside this VD\nif state ~= \"MANUAL\" then\n  for key, lightId in pairs(lightIds) do\n    local valueActual = tonumber(fibaro:getValue(lightId, \"value\"));\n    if valueActual ~= valueSet then\n      fibaro:debug(\"Override: lightId = \" .. lightId .. \": valueSet = \" .. valueSet .. \", valueActual = \" .. valueActual);\n      command = \"OVERRIDE\";\n    end  \n  end\nend\n\nfunction setLights(value)\n  for key, lightId in pairs(lightIds) do\n    fibaro:debug(\"Setting light value: lightId = \" .. lightId .. \", value = \" .. value);    \n    fibaro:call(lightId, \"setValue\", value);\n  end\n  fibaro:call(thisId, \"setProperty\", \"ui.lblValueSet.value\", value);\nend\n\n-- fibaro:debug(\"state = \" .. state .. \", command = \" .. command .. \", counter = \" .. counter);\n\nif state == \"AUTO_OFF\" then\n  if command == \"RESET\" then\n    setLights(levelStarting);\n    counter = timeTimeout;\n    next_state = \"AUTO_ON\";\n  elseif command == \"OVERRIDE\" then\n    counter = timeOverride;\n    next_state = \"MANUAL\";\n  end\n  \nelseif state == \"AUTO_ON\" then\n  counter = counter - secs_per_iteration;\n  \n  if command == \"OVERRIDE\" then\n    counter = timeOverride;\n    next_state = \"MANUAL\";\n  elseif command == \"RESET\" then\n    counter = timeTimeout;\n  elseif counter <= timeWarning then\n    setLights(levelWarning);\n    next_state = \"WARNING\";\n  end\n\nelseif state == \"WARNING\" then\n  counter = counter - secs_per_iteration;\n  \n  if command == \"OVERRIDE\" then\n    counter = timeOverride;\n    next_state = \"MANUAL\";\n  elseif command == \"RESET\" then\n    counter = timeTimeout;\n  elseif counter <= 0 then\n    setLights(levelTimeout);\n    next_state = \"AUTO_OFF\";\n  end\n\nelseif state == \"MANUAL\" then\n  counter = counter - secs_per_iteration;\n\n  if command == \"RESET\" then\n    counter = timeOverride;\n  elseif counter <= 0 then\n    setLights(levelTimeout);\n    next_state = \"AUTO_OFF\";\n  end  \n\nelse\n  fibaro:debug(\"Invalid state: \" .. state);\n  next_state = \"AUTO_OFF\";\nend\n\n\nif next_state ~= state and next_state ~= \"\" then\n  fibaro:debug(\"State transition: state = \" .. state .. \", next_state = \" .. next_state);\n  fibaro:call(thisId, \"setProperty\", \"ui.lblState.value\", next_state);\nend\n\nfibaro:call(thisId, \"setProperty\", \"ui.lblTimeLeft.value\", counter);\nfibaro:call(thisId, \"setProperty\", \"ui.lblCommand.value\", \"\");\n","ui.lblCommand.value":"","ui.lblState.value":"MANUAL","ui.lblTimeLeft.value":"42","ui.lblValueSet.value":"5","ui.sldLevelStart.value":99,"ui.sldLevelTimeout.value":0,"ui.sldLevelWarning.value":5,"ui.sldTimeOverride.value":2,"ui.sldTimeTimeout.value":1,"ui.sldTimeWarning.value":30,"visible":"true","rows":[{"type":"slider","elements":[{"id":1,"lua":false,"waitForResponse":false,"caption":"Timeout (min)","name":"sldTimeTimeout","msg":"String to send","buttonIcon":0,"value":1,"favourite":false,"main":false}]},{"type":"slider","elements":[{"id":2,"lua":false,"waitForResponse":false,"caption":"Override (min)","name":"sldTimeOverride","msg":"String to send","buttonIcon":0,"value":2,"favourite":false,"main":false}]},{"type":"slider","elements":[{"id":3,"lua":false,"waitForResponse":false,"caption":"Warning (s)","name":"sldTimeWarning","msg":"String to send","buttonIcon":0,"value":30,"favourite":false,"main":false}]},{"type":"slider","elements":[{"id":4,"lua":false,"waitForResponse":false,"caption":"Start level","name":"sldLevelStart","msg":"String to send","buttonIcon":0,"value":99,"favourite":false,"main":false}]},{"type":"slider","elements":[{"id":5,"lua":false,"waitForResponse":false,"caption":"Warning level","name":"sldLevelWarning","msg":"String to send","buttonIcon":0,"value":5,"favourite":false,"main":false}]},{"type":"slider","elements":[{"id":6,"lua":false,"waitForResponse":false,"caption":"Timeout level","name":"sldLevelTimeout","msg":"String to send","buttonIcon":0,"value":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":7,"lua":true,"waitForResponse":false,"caption":"Start count","name":"btnStartCount","empty":false,"msg":"local thisId = fibaro:getSelfId();\n\nfibaro:call(thisId, \"setProperty\", \"ui.lblCommand.value\", \"RESET\");\n","buttonIcon":0,"favourite":false,"main":true}]},{"type":"label","elements":[{"id":8,"lua":false,"waitForResponse":false,"caption":"State","name":"lblState","favourite":false,"main":false}]},{"type":"label","elements":[{"id":9,"lua":false,"waitForResponse":false,"caption":"Time left","name":"lblTimeLeft","favourite":false,"main":true}]},{"type":"label","elements":[{"id":10,"lua":false,"waitForResponse":false,"caption":"Set value","name":"lblValueSet","favourite":false,"main":false}]},{"type":"label","elements":[{"id":11,"lua":false,"waitForResponse":false,"caption":"Command","name":"lblCommand","favourite":false,"main":false}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}