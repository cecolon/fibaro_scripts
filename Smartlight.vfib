{"name":"Smartlight","type":"virtual_device","properties":{"deviceIcon":0,"currentIcon":"0","log":"","logTemp":"","mainLoop":"local thisId = fibaro:getSelfId();\nfibaro:call(thisId, \"pressButton\", \"7\");\n\n-- Use timeout callback instead of polling?\n-- Add separate button for motion event, to prevent to also check in script?","ui.lblState.value":"Auto (off)","ui.lblStateEnterTime.value":"1464611169","ui.lblValueSet.value":"0","ui.sldLevelAuto.value":99,"ui.sldTimeOverride.value":1,"ui.sldTimeTimeout.value":1,"visible":"true","rows":[{"type":"slider","elements":[{"id":1,"lua":false,"waitForResponse":false,"caption":"Timeout (min)","name":"sldTimeTimeout","msg":"String to send","buttonIcon":0,"value":1,"favourite":false,"main":false}]},{"type":"slider","elements":[{"id":2,"lua":false,"waitForResponse":false,"caption":"Override (min)","name":"sldTimeOverride","msg":"String to send","buttonIcon":0,"value":1,"favourite":false,"main":false}]},{"type":"slider","elements":[{"id":3,"lua":false,"waitForResponse":false,"caption":"Auto level (%)","name":"sldLevelAuto","msg":"String to send","buttonIcon":0,"value":99,"favourite":false,"main":false}]},{"type":"label","elements":[{"id":4,"lua":false,"waitForResponse":false,"caption":"State","name":"lblState","favourite":false,"main":true}]},{"type":"label","elements":[{"id":5,"lua":false,"waitForResponse":false,"caption":"Set value","name":"lblValueSet","favourite":false,"main":false}]},{"type":"label","elements":[{"id":6,"lua":false,"waitForResponse":false,"caption":"State entered","name":"lblStateEnterTime","favourite":false,"main":false}]},{"type":"button","elements":[{"id":7,"lua":true,"waitForResponse":false,"caption":"Refresh","name":"btnRefresh","empty":false,"msg":"---- Configuration ----\n-- local lightIds = { 150, 130 }; local sensorId =  102; -- Hall\nlocal lightIds = { 28, 32, 44 }; local sensorId =  244; -- Stue\n-- local lightIds = { 48 }; local sensorId =  267; -- KjÃ¸kken\nlocal debug_enabled = true;\nlocal timeWarning = 30; -- seconds\nlocal levelWarning = 5;\n\n---- Parameters ----\nlocal thisId = fibaro:getSelfId();\n\nlocal timeTimeout = 60*tonumber(fibaro:getValue(thisId, \"ui.sldTimeTimeout.value\"));\nlocal timeOverride = 60*tonumber(fibaro:getValue(thisId, \"ui.sldTimeOverride.value\"));\nlocal levelAuto = tonumber(fibaro:getValue(thisId, \"ui.sldLevelAuto.value\"));\n\n---- Persistent variables ----\nlocal state = fibaro:getValue(thisId, \"ui.lblState.value\"); if state == nil then state = \"\"; end\nlocal valueSet = tonumber(fibaro:getValue(thisId, \"ui.lblValueSet.value\")); if valueSet == nil then valueSet = 0; end\nlocal stateEnterTime = tonumber(fibaro:getValue(thisId, \"ui.lblStateEnterTime.value\")); if stateEnterTime == nil then stateEnterTime = os.time(); end\n\n---- Local variables and precalculations ----\nlocal next_state = \"\"; local command = \"\";\nlocal levelTimeout = 0;\n\nlocal timeInState = os.time() - stateEnterTime;\nlocal timeLeftInState = 0;\n\n---- Internal functions ----\nfunction dbg(str)\n  if debug_enabled == true then\n    fibaro:debug(str)\n  end\nend\n\nfunction setLights(value)\n  for key, lightId in pairs(lightIds) do\n    dbg(\"Setting light value: lightId = \" .. lightId .. \", value = \" .. value);    \n    fibaro:call(lightId, \"setValue\", value);\n  end\n  fibaro:call(thisId, \"setProperty\", \"ui.lblValueSet.value\", value);\nend\n\nfunction changeState(nextState)\n  dbg(\"State transition: state = \" .. state .. \", nextState = \" .. nextState);\n  fibaro:call(thisId, \"setProperty\", \"ui.lblState.value\", nextState);\n  fibaro:call(thisId, \"setProperty\", \"ui.lblStateEnterTime.value\", os.time());\nend\n\nfunction changeStateAndSetLights(nextState, level)\n  changeState(nextState);\n  setLights(level);\nend\n\n---- Main logic ----\n\n-- Check events that trigger commands (with increasing priority):\n\n-- Check if motion is active\nif tonumber(fibaro:getValue(sensorId, \"value\")) > 0 then\n  dbg(\"Motion: sensorId = \" .. sensorId);\n  command = \"RESET\";\nend\n\n-- Check if light has been manually changed outside this VD\nif state ~= \"Manual\" then\n  for key, lightId in pairs(lightIds) do\n    local valueActual = tonumber(fibaro:getValue(lightId, \"value\"));\n    if valueActual ~= valueSet then\n      dbg(\"Override: lightId = \" .. lightId .. \": valueSet = \" .. valueSet .. \", valueActual = \" .. valueActual);\n      command = \"OVERRIDE\";\n    end  \n  end\nend\n\n-- Determine time left based on state\nif state == \"Auto (on)\" then\n  timeLeftInState = timeTimeout - timeInState;\nelseif state == \"Auto (warning)\" then\n  timeLeftInState = timeWarning - timeInState;\nelseif state == \"Manual\" then\n  timeLeftInState = timeOverride - timeInState;\nelse\n  timeLeftInState = 0;\nend\n\ndbg(\"state = \" .. state .. \", command = \" .. command .. \", timeInState = \" .. timeInState .. \", timeLeftInState = \" .. timeLeftInState);\n  \n-- State machine\nif state == \"Auto (off)\" then\n  if command == \"RESET\" then\n    changeStateAndSetLights(\"Auto (on)\", levelAuto);\n  elseif command == \"OVERRIDE\" then\n    changeState(\"Manual\");\n  end\n  \nelseif state == \"Auto (on)\" then\n  if command == \"OVERRIDE\" then\n    changeState(\"Manual\");\n  elseif command == \"RESET\" then\n    changeState(\"Auto (on)\");\n  elseif timeLeftInState <= timeWarning then\n    changeStateAndSetLights(\"Auto (warning)\", levelWarning);\n  end\n\nelseif state == \"Auto (warning)\" then\n  if command == \"OVERRIDE\" then\n    changeState(\"Manual\");\n  elseif command == \"RESET\" then\n    changeStateAndSetLights(\"Auto (on)\", levelAuto);\n  elseif timeLeftInState <= 0 then\n    changeStateAndSetLights(\"Auto (off)\", levelTimeout);\n  end\n\nelseif state == \"Manual\" then\n  if command == \"RESET\" then\n    changeState(\"Manual\");\n  elseif timeLeftInState <= 0 then\n    changeStateAndSetLights(\"Auto (off)\", levelTimeout);\n  end  \n\nelse\n  dbg(\"Invalid state: \" .. state);\n  changeState(\"Auto (off)\");\nend\n","buttonIcon":0,"favourite":false,"main":true}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}